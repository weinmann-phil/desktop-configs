- name: Whoami
  ansible.builtin.command: whoami
  become: yes
  become_user: mnv1c
  register: local_user

- name: Checkout NeoVim Base IDE
  ansible.builtin.git:
    repo: 'https://github.com/weinmann-phil/base-setup.nvim.git'
    dest: "/home/{{ local_user.stdout }}/.config/nvim"
    version: main

- name: Checkout Dotfiles
  ansible.builtin.git:
    repo: 'https://github.com/weinmann-phil/dotfiles.git'
    dest: "/home/{{ local_user.stdout }}/.config/dotfiles"
    version: main

- name: Ensure BASH Config Folder Exists
  ansible.builtin.stat:
    path: "/home/{{ local_user.stdout }}/.config/bash"
  register: bash_folder

- name: Create BASH Config Folder
  ansible.builtin.file:
    path: "/home/{{ local_user.stdout }}/.config/bash"
    state: directory
    mode: 0755
  when: not bash_folder.stat.exists

- name: "Copy Bash Config Scripts to .config/bash"
  ansible.builtin.copy:
    src: "{{ item }}"
    dest: "/home/{{ local_user.stdout }}/.config/bash/"
    owner: "{{ local_user.stdout }}"
    mode: 0777
  with_fileglob:
    - "/home/{{ local_user.stdout }}/.config/dotfiles/scripts/bash/*"

- name: "Ensure GIT Config Folder Exists"
  ansible.builtin.stat:
    path: "/home/{{ local_user.stdout }}/.config/git"
  register: git_folder

- name: Create GIT Config Folder
  ansible.builtin.file:
    path: "/home/{{ local_user.stdout }}/.config/git"
    state: directory
    mode: 0755
  when: not git_folder.stat.exists

- name: "Copy Git Config File to .config/git"
  ansible.builtin.copy:
    src: "{{ item }}"
    dest: "/home/{{ local_user.stdout }}/.config/git/"
    owner: "{{ local_user.stdout }}"
    mode: 0777
  with_fileglob:
    - "/home/{{ local_user.stdout }}/.config/dotfiles/scripts/git/*"

- name: "Ensure KUBERNETES Config Folder Exists"
  ansible.builtin.stat:
    path: "/home/{{ local_user.stdout }}/.config/kubernetes"
  register: k8s_folder

- name: Create Kubernetes Config Folder
  ansible.builtin.file:
    path: "/home/{{ local_user.stdout }}/.config/kubernetes"
    state: directory
    mode: 0755
  when: not k8s_folder.stat.exists

- name: "Copy Kubernetes Config Folder to .config/kubernetes"
  ansible.builtin.copy:
    src: "{{ item }}"
    dest: "/home/{{ local_user.stdout }}/.config/kubernetes"
    owner: "{{ local_user.stdout }}"
    mode: 0777
  with_fileglob:
    - "/home/{{ local_user.stdout }}/.config/dotfiles/scripts/kubernetes/*"

- name: Ensure AZURE Config Folder Exists
  ansible.builtin.stat:
    path: "/home/{{ local_user.stdout }}/.config/azure"
  register: azure_folder

- name: Create Azure Config Folder
  ansible.builtin.file:
    path: "/home/{{ local_user.stdout }}/.config/azure"
    state: directory
    mode: 0755
  when: not azure_folder.stat.exists

- name: "Copy Azure Config Files to .config/azure"
  ansible.builtin.copy:
    src: "{{ item }}"
    dest: "/home/{{ local_user.stdout }}/.config/azure"
    owner: "{{ local_user.stdout }}"
    mode: 0777
  with_fileglob:
    - "/home/{{ local_user.stdout }}/.config/dotfiles/scripts/azure/*"

# Powerlevel10k
- name: Clone Power10k Themes 
  ansible.builtin.git:
    repo: 'https://github.com/romkatv/powerlevel10k.git'
    dest: "/home/{{ local_user.stdout }}/.oh-my-zsh/themes/powerlevel10k"

# ZSH Configs
- name: Backup of previous .zshrc
  ansible.builtin.copy:
    src: "/home/{{ local_user.stdout }}/.zshrc"
    dest: "/home/{{ local_user.stdout }}/.config/bak/{{ ansible_date_time.date }}_zshrc.bak"
    owner: "{{ local_user.stdout }}"

- name: Setup ZSH Environments
  ansible.builtin.copy:
    src: "/home/{{ local_user.stdout }}/.config/dotfiles/src/zshrc/aliases.zsh"
    dest: "/home/{{ local_user.stdout }}/.zshrc"

- name: Install Alire for Language Server Support
  ansible.builtin.git:
    repo: 'https://github.com/alire-project/alire.git'
    dest: "/home/{{ local_user.stdout }}/.config/alire"
    version: master
    # track_submodules: true
    force: yes

- name: Ensure bin folder exists within Alire Config
  ansible.builtin.stat:
    path: "/home/{{ local_user.stdout }}/.config/alire/bin"
  register: bin_folder

- name: Create bin Directory for Alire
  ansible.builtin.file:
    path: "/home/{{ local_user.stdout }}/.config/alire/bin"
    state: directory
    mode: 0755
  when: not bin_folder.stat.exists

- name: Build Alire CLI
  ansible.builtin.command: "/home/{{ local_user.stdout }}/.config/alire/dev/build.sh"
  delegate_to: localhost

- name: Move binaries to usr bin directory
  ansible.builtin.copy:
    src: "/home/{{ local_user.stdout }}/.config/alire/bin/alr"
    dest: "/usr/bin"

- name: Remove Binary Source File
  ansible.builtin.file:
    path: "/home/{{ local_user.stdout }}/.config/alire/bin/alr"
    state: absent

- name: chmod +x ALR executable
  ansible.builtin.file:
    path: "/usr/bin/alr"
    owner: "{{ local_user.stdout }}"
    mode: '0755'

- name: Disable Dependency Sharing in Alire
  ansible.builtin.command: 'alr settings --global --set dependencies.shared false --builtin'
  delegate_to: localhost

- name: Clone ADA Language Server Repository
  ansible.builtin.git:
    repo: 'https://github.com/AdaCore/ada_language_server.git'
    dest: "/home/{{ local_user.stdout }}/.config/ada_language_server"
    version: edge
    force: yes

- name: Run Install Script
  ansible.builtin.command: "/home/{{ local_user.stdout }}/.config/ada_language_server/scripts/build_als.sh all 24.0.999 x64/linux"
  delegate_to: localhost

