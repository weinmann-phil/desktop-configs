#SPDX-License-Identifier: MIT-0
---
# tasks file for roles/install_applications
- name: Ensure keyrings Directory Exists
  ansible.builtin.stat:
    path: /etc/apt/keyrings
  register: keyrings_folder

- name: Create directory for Docker's GPG key
  ansible.builtin.file:
    path: /etc/apt/keyrings
    state: directory
    mode: 0766
  when: not keyrings_folder.stat.exists

- name: Add Docker GPG apt KEY
  ansible.builtin.get_url:
    url: https://download.docker.com/linux/ubuntu/gpg
    dest: /etc/apt/keyrings/docker.gpg
    mode: 0644
    force: true
  become: true
  become_method: sudo

- name: Print architecture variables
  ansible.builtin.debug:
    msg: "Architecture: {{ ansible_architecture }}, Codename: {{ environment_code_name | default( ansible_lsb.codename ) }}"

- name: Add Docker Repository
  ansible.builtin.apt_repository:
    repo: deb [arch={{ arch_mapping[ansible_architecture] | default(ansible_lsb.codename) }} signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu {{ ansible_lsb.codename }} stable
    filename: docker
    state: present
  become: true
  become_user: "{{ local_user.stdout }}"

- name: Update apt and install docker-ce
  ansible.builtin.apt:
    name: "{{ item }}"
    state: present
    # update_cache: true
  loop:
    - docker-ce
    - docker-ce-cli
    - containerd.io
    - docker-buildx-plugin
    - docker-compose-plugin
  become: true
  become_method: sudo

- name: Add Docker group
  ansible.builtin.group:
    name: docker
    state: present
  become: true
  become_method: sudo

- name: Add user to Docker group
  ansible.builtin.user:
    name: "{{ local_user.stdout }}"
  become: true
  become_method: sudo 

- name: Enable and start Docker services
  systemd:
    name: "{{ item }}"
    enabled: true
    state: started
  loop:
    - docker.service
    - containerd.service
  become: true
  become_method: sudo 
